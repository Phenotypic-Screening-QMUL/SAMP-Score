library("gplots")
library("RColorBrewer")
library("matrixStats")
library("plyr")
library("dplyr")
library("data.table")
library("stringr")
library("ggplot2")
library("Rtsne")
All_ST_Clean <- read.csv(" All_ST_Clean.csv")
All_ST_Clean <- read.csv("All_ST_Clean.csv")
1+1
All_ST_Clean <- na.omit
All_ST_Clean <- read.csv("All_ST_Clean.csv")
All_ST_Clean <- na.omit()
All_ST_Clean <- read.csv("All_ST_Clean.csv")
All_ST_Clean <- read.csv("All_ST_Clean.csv")
1+1
View(All_ST_Clean)
source("~/Library/CloudStorage/OneDrive-QueenMary,UniversityofLondon/Post-Doc/Papers/SAMPSCORE_A morphology-based machine learning method for screening prosenescence in p16 positive cancer/Raw Phenocopying Analysis/Phenocopying/0_Feature Selection_Correlations/Correlations.R", echo=TRUE)
View(numdatadf)
View(numdatadf)
View(All_ST_Clean)
source("~/Library/CloudStorage/OneDrive-QueenMary,UniversityofLondon/Post-Doc/Papers/SAMPSCORE_A morphology-based machine learning method for screening prosenescence in p16 positive cancer/Raw Phenocopying Analysis/Phenocopying/0_Feature Selection_Correlations/Correlations.R", echo=TRUE)
library("gplots")
library("RColorBrewer")
library("matrixStats")
library("plyr")
library("dplyr")
library("data.table")
library("stringr")
library("ggplot2")
library("Rtsne")
All_ST_Clean <- read.csv("All_ST_Clean 2.csv")
1+1
All_ST_Clean <- read.csv("All_ST_Clean 2.csv")
View(All_ST_Clean)
numdata <- All_ST_Clean [,-c(1,2,18,19,21,56,57,60)]
numdatadf <- data.frame(numdata)
sapply(numdatadf,is.numeric)
library(corrplot)
col <- colorRampPalette(c("#BB4444", "#EE9988", "#FFFFFF", "#77AADD", "#4477AA"))
df_cor <- cor(numdatadf, use=c("pairwise.complete.obs"))
#makes labels fit in margins
par(xpd=TRUE)
corrplot(df_cor, method="color", col=col(20),
type="upper", order="hclust", tl.cex = 0.01, # Add coefficient of correlation
tl.col="black", tl.srt=90, #Text label color and rotation
# hide correlation coefficient on the principal diagonal
diag=T,mar = c(2, 0, 1, 0))
library("caret")
High_corr <- findCorrelation(df_cor, cutoff = .9, verbose = TRUE, names = TRUE)
hc = findCorrelation(df_cor, cutoff=0.9) # putt any value as a "cutoff"
hc = sort(hc)
reduced_Data = df_cor[,-c(hc)]
reduced_Data <- as.data.frame(reduced_Data)
#Full Matrix
write.csv(df_cor, "Correlation Matrix.csv")
#Remaining
write.csv(reduced_Data, "Reduced Data.csv")
#Removed
write.csv(High_corr, "Correlated Measures.csv")
1+1
View(reduced_Data)
View(numdatadf)
#Import siGlo Control ST Data
All_ST_Clean <- read.csv("All_ST_Clean 2.csv")
View(All_ST_Clean)
source("~/Library/CloudStorage/OneDrive-QueenMary,UniversityofLondon/Post-Doc/Papers/SAMPSCORE/Raw Analysis/0_Feature Selection_Correlations copy/Correlations.R", echo=TRUE)
source("~/Library/CloudStorage/OneDrive-QueenMary,UniversityofLondon/Post-Doc/Papers/SAMPSCORE/SAMP-Score/0_Feature Selection_Correlations_Updated/Correlations.R", echo=TRUE)
library("gplots")
library("RColorBrewer")
library("matrixStats")
library("plyr")
library("dplyr")
library("data.table")
library("stringr")
library("ggplot2")
library("Rtsne")
#Import siGlo Control ST Data
All_ST_Clean <- read.csv("All_ST_Clean 2.csv")
1+1
library("gplots")
library("RColorBrewer")
library("matrixStats")
library("plyr")
library("dplyr")
library("data.table")
library("stringr")
library("ggplot2")
library("Rtsne")
1+1
All_ST_Clean <- read.csv("All_ST_Clean 2.csv")
Remove Final Low Quality Measures
#Remove Final Low Quality Measures
numdata <- All_ST_Clean [,-c(1,2,17,18,19,21,56,57,60)]
numdatadf <- data.frame(numdata)
sapply(numdatadf,is.numeric)
#Generate Correlation Matrix
library(corrplot)
col <- colorRampPalette(c( "#77AADD", "#4477AA", "#FFFFFF", "#EE9988","#BB4444" ))
df_cor <- cor(numdatadf, use=c("pairwise.complete.obs"))
#makes labels fit in margins
par(xpd=TRUE)
corrplot(df_cor, method="color", col=col(20),
type="full", order="hclust", tl.cex = 0.01, # Add coefficient of correlation
tl.col="black", tl.srt=90, #Text label color and rotation
# hide correlation coefficient on the principal diagonal
diag=T,mar = c(2, 0, 1, 0))
#Generate Correlation Tables
library("caret")
High_corr <- findCorrelation(df_cor, cutoff = .9, verbose = TRUE, names = TRUE)
hc = findCorrelation(df_cor, cutoff=0.9) # putt any value as a "cutoff"
hc = sort(hc)
reduced_Data = df_cor[,-c(hc)]
reduced_Data <- as.data.frame(reduced_Data)
#Full Correlation Matrix
write.csv(df_cor, "Correlation Matrix.csv")
#Retained Features Matrix - Columns
write.csv(reduced_Data, "Reduced Data.csv")
#Removed Features
write.csv(High_corr, "Correlated Measures.csv")
